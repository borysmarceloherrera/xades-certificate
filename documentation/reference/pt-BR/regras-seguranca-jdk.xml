<?xml version='1.0' encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" []>
<appendix id="regras-seguranca-jdk">

    <title>Regras de segurança de aplicações JAVA assinadas</title>

    <section>
        <title>Introdução</title>
        <para>
        	A partir da release 7u51 o Java adicionou mais requisitos de segurança obrigando que as aplicações Web Start tenham assinaturas de código de uma autoridade confiável e alguns atributos no arquivo <command>MANIFEST</command>
        </para>
    </section>

    <section>
        <title>O Atributo Permissions</title>
        <para>
            O atributo <emphasis>Permissions</emphasis> é usado para verificar se o nível de permissões solicitada por um RIA quando ele é executado coincide com o nível de permissões que foi definido quando
            foi criado o arquivo JAR. Use este atributo para ajudar a impedir alguém de reimplantar um aplicativo que está assinado com o seu certificado e executá-lo em um nível de privilégio diferente.
            Defina esse atributo para um dos seguintes valores:
        </para>

        <table>
            <title>Valores para o atributo Permissions</title>
            <tgroup colsep="1" cols="2">
                <colspec colnum="1" colname="c0" />
                <colspec colnum="2" colname="c1" />
                <tbody>
                    <row>
                        <entry>sandbox</entry>
                        <entry>Indica que o RIA é executado no domínio de segurança e não requer permissões adicionais.</entry>
                    </row>
                    <row>
                        <entry>all-permissions</entry>
                        <entry>Indica que o RIA requer acesso aos recursos do sistema do usuário.</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>

        <para>
            Se o nível de segurança no painel de controle do JAVA estiver definido como muito alta ou alta, então o atributo de permissões será necessário no arquivo JAR principal do RIA. Se o atributo não estiver presente,
            então o RIA será bloqueado. Para o nível de segurança médio, se o atributo de permissões não estiver presente, então será emitido um aviso de segurança com um aviso amarelo sobre o atributo ausente, e o nível
            de permissões solicitado pelo RIA será usado.
        </para>
    </section>
    <section>
        <title>O Atributo Codebase</title>
        <para>
            O atributo <emphasis>Codebase</emphasis> é usado para restringir a base de código do arquivo JAR para domínios específicos. Use este atributo para impedir que alguém reimplante seu aplicativo em um
            outro site para fins maliciosos.
        </para>

        <para>
            <important>Se o atributo <emphasis>Codebase</emphasis> não especificar um servidor seguro, como HTTPS, existe o risco de seu código ser reaproveitado em esquemas de ataque Man-in-the-Middle (MITM).</important>
        </para>

        <para>
            Defina este atributo para o nome de domínio ou endereço IP onde se encontra o arquivo JAR do aplicativo. Um número de porta também pode ser incluído. Para vários locais, separe os valores com um
            espaço. Um asterisco (*) pode ser usado como um curinga apenas no início do nome do domínio.
        </para>

        <para>
            O valor do atributo <emphasis>Codebase</emphasis> deve coincidir com a localização do arquivo JAR do RIA. Caso contrário, um erro é mostrado e o RIA será bloqueado. Se o atributo não estiver
            presente, um aviso é escrito no console do JAVA e a base de código especificada para o arquivo JNLP é usado.
        </para>
    </section>

    <section>
        <title>O Atributo Application-Name</title>
        <para>
            O atributo <emphasis>Application-Name</emphasis> é usado em avisos de segurança para fornecer um título para a sua RIA assinada. Recomenda-se o uso deste atributo para ajudar os usuários a tomar
            a decisão de confiar e executar o RIA. O valor pode ser qualquer cadeia de caracteres válida, por exemplo:
        </para>

        <para>
            <emphasis>Application-Name: Hello World</emphasis>
        </para>

        <para>
            Se o atributo de nome do aplicativo não estiver presente no manifesto do arquivo JAR, um aviso é escrito no console JAVA e o valor do atributo Main-Class é usado. Se nenhum atributo estiver
            presente no manifesto, nenhum título será mostrado no aviso de segurança. Os títulos não são mostrados em RIAs não assinados.
        </para>
    </section>
    <section>
        <title>O Atributo Application-Library-Allowable-Codebase</title>
        <para>
            O atributo <emphasis>Application-Library-Allowable-Codebase</emphasis> identifica os locais onde é esperado ser encontrado o seu RIA assinado. Este atributo é usado para determinar o que está
            listado no campo de localização para o aviso de segurança que é exibido aos usuários quando o arquivo JAR do seu RIA está em um local diferente do arquivo JNLP ou página HTML que inicia seu RIA.
            Se os arquivos não estiverem nos locais identificados, o RIA será bloqueado. Defina este atributo para os domínios onde se situam o arquivo JAR, arquivo JNLP e página HTML. Para especificar mais de
            um domínio, separe-os por um espaço, por exemplo:
        </para>

        <para>
            <emphasis>Application-Library-Allowable-Codebase: https://host.example.com *.samplehost.com/apps</emphasis>
        </para>

        <para>
            Se o atributo estiver presente e coincidir com o local onde o RIA foi iniciado, então um único host é listado no campo de localização do aviso e a opção de ocultar avisos futuros é fornecida.
            Se este atributo estiver presente, e os arquivos são acessados a partir de um local não incluído no atributo, então o RIA será bloqueado. Se este atributo não estiver presente, então vários hosts
            que correspondem aos locais de arquivo JAR e o arquivo JNLP ou página HTML serão listados no campo de localização do aviso. Quando múltiplos hosts são mostrados, não é dado ao usuário a opção de
            ocultar avisos futuros. Recomenda-se o uso deste atributo para que os arquivos do RIA sejam acessados somente a partir de locais conhecidos.
        </para>

        <para>
            Este atributo não é necessário se o arquivo JAR do RIA estiver no mesmo local que o arquivo JNLP ou página HTML que inicia o RIA.
        </para>

    </section>
    <section>
        <title>O Atributo Trusted-Only</title>
        <para>
            O atributo  <emphasis>Trusted-Only</emphasis> é usado para impedir que as classes não confiáis ou recursos sejam carregadas em um  aplicativo. Por exemplo:
        </para>
        <para>
            <emphasis>Trusted-Only: true</emphasis>
        </para>
        <para>
            Este atributo impede que um aplicativo privilegiado seja realocado com componentes não confiáveis. Todas as classes e recursos do aplicativo devem ser assinados e todas as permissões
            devem ser solicitadas.
        </para>

    </section>
    <section>
        <title>O Atributo Trusted-Library</title>
        <para>
            O atributo <emphasis>Trusted-Library</emphasis> é usado para aplicativos que são projetados para permitir componentes não confiáveis. Nenhuma caixa de diálogo de aviso é mostrada e um aplicativo
            pode carregar arquivos JAR que contêm classes não confiáveis ou recursos. Por exemplo:
        </para>
        <para>
            <emphasis>Trusted-Library: true</emphasis>
        </para>
        <para>
            Este atributo impede que componentes em um aplicativo privilegiado seja realocado com componentes não confiáveis. Todas as classes e recursos em um arquivo JAR contendo este atributo
            devem ser assinados e todas as permissões devem ser solicitadas.
        </para>
    </section>
    <section>
        <title>Incluindo os atributos no manifesto</title>
        <para>
            Para incluir os atributos no manifesto, primeiramente precisamos criar um arquivo de texto chamado <emphasis>manifest-addiction.txt</emphasis> contendo os parâmetros abaixo. Os valores são apenas para efetuar a
            configuração inicial, posteriormente o desenvolvedor deve restringir o máximo possível os valores para aumentar o nível de segurança da aplicação.
        </para>

        <programlisting role="JAVA"><![CDATA[Permissions: all-permissions
Codebase: *
Application-Name: App Customizada
Application-Library-Allowable-Codebase: *
Caller-Allowable-Codebase: *
Trusted-Only: true
Trusted-Library: true]]></programlisting>

        <para>
            Em seguida, imediatamente antes da assinatura digital do arquivo, o comando abaixo deve ser executado.
        </para>

        <para>
            A variável JAVAHOME deve apontar para a versão mais nova do JAVA, na versão 1.7.0 release 51 ou maior.
        </para>

        <programlisting role="JAVA"><![CDATA[JAVAHOME/bin/jar uvfm jarfile manifest-addition.txt]]></programlisting>

        <para>
            Ao final da execução deste comando os atributos estarão incorporados ao manifesto.
        </para>

    </section>
    <section>
        <title>Tratando os artefatos jar assinados por terceiros</title>
        <para>
            Alguns artefatos JAR podem vir previamente assinados pelo fornecedor, como é o caso das dependências do BouncyCastle. Neste caso, antes de aplicarmos a adição dos parâmetros do manifesto e efetuar
            a assinatura, precisamos remover os dados de assinatura do fornecedor. Na figura baixo podemos verificar os arquivos contidos no pacote META-INF correspondentes à assinatura.
        </para>

        <para>
            <figure>
                <title>
                    Conteúdo do META-INF
                </title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="images/tela05.png" format="PNG" align="center" scalefit="1" width="75%"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </para>


        <para>
            Neste caso, para remover os dados da assinatura anterior basta executar o comando abaixo. Após este passo basta executar os procedimentos de adição de atributos e assinatura digital normalmente.
        </para>

        <programlisting role="JAVA"><![CDATA[zip -d jarfile /META-INF/BCKEY.*]]></programlisting>

        <para>
            O nome “BCKEY” no comando é correspondente ao BouncyCastle. Se o arquivo JAR possuir um nome diferente, o comando deve ser alterado.
        </para>
    </section>
    <section>
        <title>Importação da cadeia de certificados para o JAVA</title>
        <para>
            Mesmo que todos os passos acima sejam executados corretamente, existe a possibilidade do RIA retornar a tela exibida a seguir:
        </para>

        <para>
            <figure>
                <title>
                    Tela de aplicação bloqueada
                </title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="images/tela06.png" format="PNG" align="center" scalefit="1" width="75%"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </para>

        <para>
            Esta tela indica que, apesar de todos os atributos estarem corretamente configurados, os artefatos foram assinados por um certificado digital que não é confiado pela máquina virtual do JAVA. Para
            resolver isto, precisamos executar os procedimentos a seguir no equipamento do usuário.
        </para>

        <para>
            Primeiramente, precisamos baicar toda a cadeia da CA que emitiu o certificado. SE o certificado foi emitido pelo SERPRO, as cadeias podem ser obtidas no site do
            <ulink url="https://ccd.serpro.gov.br/serproacf/">CCD SERPRO</ulink>, na opção de menu “Baixar Cadeia”.
        </para>

        <para>
            Em seguida, abra o painel de controle do JAVA e selecione a aba “Segurança”.
        </para>

        <para>
            <figure>
                <title>
                    Aba "Segurança"
                </title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="images/tela07.png" format="PNG" align="center" scalefit="1" width="75%"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </para>

        <para>
            Clique no botão “Gerenciar Certificados” e selecione a opção “CA de Signatário” na combo que aparece no topo da tela.
        </para>

        <para>
            <figure>
                <title>
                    CA de Signatário
                </title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="images/tela08.png" format="PNG" align="center" scalefit="1" width="75%"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </para>

        <para>
            Clique no botão “Importar” e altere a combo de filtro para “Todos os arquivos”.
        </para>

        <para>
            <figure>
                <title>
                    Importando os certificados
                </title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="images/tela09.png" format="PNG" align="center" scalefit="1" width="75%"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </para>

        <para>
            A importação de cada cadeia deve ser feita separadamente. Após a importação, as ACs devem ser exibidas como na tela a seguir:
        </para>

        <para>
            <figure>
                <title>
                    Certificados instalados
                </title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="images/tela10.png" format="PNG" align="center" scalefit="1" width="75%"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </para>

    </section>

</appendix>